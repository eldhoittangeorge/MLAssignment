plot(1:15,w,type = "b")
w[i] <- sum(kmeans(newData[c(2,8)],centers=i)$withinss)
print(w)
plot(1:15,w,type = "b")
w[i] <- sum(kmeans(newData[c(2:8)],centers=i)$withinss)
print(w)
plot(1:15,w,type = "b")
model = kmeans(newData)
model = kmeans(finalData,centers=5)
finalData <- newData[c(2,8)]
finalData <- newData[c(2:8)]
model = kmeans(finalData,centers=5)
model$cluster
clustplot(finalData,model$cluster)
library(cluster)
clustplot(finalData,model$cluster)
clusplot(finalData,model$cluster)
clusplot(finalData,model$cluster,color=TRUE)
finalData <- newData[c(2:8)]
for (i in 1:15){
w[i] <- sum(kmeans(newData[c(2:8)],centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=5)
clusplot(finalData,model$cluster,color=TRUE)
for (i in 1:15){
w[i] <- sum(kmeans(newData[c(2:8)],centers=i)$withinss)
}
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=4)
clusplot(finalData,model$cluster,color=TRUE)
plotcluster(finalData,model$cluster,color=TRUE)
plotcluster(finalData,model$cluster)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=4)
plotcluster(finalData,model$cluster)
for (i in finalData){
print(i)
}
break()
for (i in finalData){
print(i)
break()
}
createData <- function(i){
i = i + 1
}
s <- c(1:10)
s <- apply(s, 1, createData)
dim(s)
s <- c(1:10)
dim(s)
s <- c(1,10)
dim(s)
s <- apply(c(1:10), 1, createData)
da <- finalData[data$No.of.Households != 0 & data$Total.Population.Person != 0 & data$Scheduled.Castes.population.Person
!= 0 & data$Scheduled.Tribes.population.Person != 0 & data$Literates.Population.Person != 0 &
data$Main.Household.Industries.Population.Person != 0 & data$Non.Working.Population.Person]
finalData <- newData[c(2:8)]
str(finalData)
da <- finalData[data$No.of.Households != 0 & data$Total.Population.Person != 0 & data$Scheduled.Castes.population.Person
!= 0 & data$Scheduled.Tribes.population.Person != 0 & data$Literates.Population.Person != 0 &
data$Main.Household.Industries.Population.Person != 0 & data$Non.Working.Population.Person  != 0]
da <- finalData[data$No.of.Households != 0 & data$Total.Population.Person != 0 & data$Scheduled.Castes.population.Person
!= 0 & data$Scheduled.Tribes.population.Person != 0 & data$Literates.Population.Person != 0 &
data$Main.Household.Industries.Population.Person != 0 & data$Non.Working.Population.Person  != 0]
da <- finalData[data$No.of.Households != 0 & data$Total.Population.Person != 0 & data$Scheduled.Castes.population.Person]
da <- finalData[data$No.of.Households != 0 & data$Total.Population.Person != 0 & data$Scheduled.Castes.population.Person]
da <- finalData[data$No.of.Households != 0]
da <- finalData[finalData$No.of.Households != 0 & finalData$Total.Population.Person != 0 & finalData$Scheduled.Castes.population.Person
!= 0 & finalData$Scheduled.Tribes.population.Person != 0 & finalData$Literates.Population.Person != 0 &
finalData$Main.Household.Industries.Population.Person != 0 & finalData$Non.Working.Population.Person  != 0]
dim(da)
data <- read.csv("census.csv")
dim(data)
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Scheduled.Castes.population.Person
,data$Scheduled.Tribes.population.Person,data$Literates.Population.Person,
data$Main.Household.Industries.Population.Person,data$Non.Working.Population.Person)
newData <- newData[data$Town.Village_Code > 0,]
str(newData[c(2:8)])
da <- finalData[finalData$No.of.Households != 0 & finalData$Total.Population.Person != 0 & finalData$Scheduled.Castes.population.Person
!= 0 & finalData$Scheduled.Tribes.population.Person != 0 & finalData$Literates.Population.Person != 0 &
finalData$Main.Household.Industries.Population.Person != 0 & finalData$Non.Working.Population.Person  != 0]
dim(da)
da <- finalData[finalData$No.of.Households != 0] # & finalData$Total.Population.Person != 0 & finalData$Scheduled.Castes.population.Person
da <- finalData[finalData$No.of.Households != 0] # & finalData$Total.Population.Person != 0 & finalData$Scheduled.Castes.population.Person
#!= 0 & finalData$Scheduled.Tribes.population.Person != 0 & finalData$Literates.Population.Person != 0 &
# finalData$Main.Household.Industries.Population.Person != 0 & finalData$Non.Working.Population.Person  != 0]
dim(da)
#!= 0 & finalData$Scheduled.Tribes.population.Person != 0 & finalData$Literates.Population.Person != 0 &
# finalData$Main.Household.Industries.Population.Person != 0 & finalData$Non.Working.Population.Person  != 0]
print(da)
finalData <- finalData[finalData$No.of.Households != 0] # & finalData$Total.Population.Person != 0 & finalData$Scheduled.Castes.population.Person
#!= 0 & finalData$Scheduled.Tribes.population.Person != 0 & finalData$Literates.Population.Person != 0 &
# finalData$Main.Household.Industries.Population.Person != 0 & finalData$Non.Working.Population.Person  != 0]
print(da)
finalData <- newData[c(2:8)]
str(finalData)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=4)
plotcluster(finalData,model$cluster)
finalData <- finalData[finalData$No.of.Households == 0] # & finalData$Total.Population.Person != 0 & finalData$Scheduled.Castes.population.Person
#!= 0 & finalData$Scheduled.Tribes.population.Person != 0 & finalData$Literates.Population.Person != 0 &
# finalData$Main.Household.Industries.Population.Person != 0 & finalData$Non.Working.Population.Person  != 0]
print(da)
finalData$No.of.Households <- finalData[finalData$No.of.Households == 0] # & finalData$Total.Population.Person != 0 & finalData$Scheduled.Castes.population.Person
#!= 0 & finalData$Scheduled.Tribes.population.Person != 0 & finalData$Literates.Population.Person != 0 &
# finalData$Main.Household.Industries.Population.Person != 0 & finalData$Non.Working.Population.Person  != 0]
print(da)
finalData <- newData[c(2:8)]
model = kmeans(finalData,centers=3)
plotcluster(finalData,model$cluster)
model = kmeans(finalData,centers=4)
plotcluster(finalData,model$cluster)
clusplot(finalData,model$cluster)
library(ggplot2) # For visualization
library(lattice) # For visualization
library(stats)   # This package contains functions for statistical calculations and random number generation.
library(cluster) # for plotting clusters with clusplot()
library(fpc)     # for plotting clusters with plotcluster(), validating clusters
# Load Data
teens <- read.csv("snsdata.csv")
str(teens) # Get all the attributes, type, and other information
table(teens$gradyear, useNA = "ifany")
table(teens$gender, useNA = "ifany")
summary(teens$age)
summary(teens$friends)
boxplot(teens$age, ylab = "Age")
rug(jitter(teens$age), side = 2) # Creates tick marks on side-2 means y-axis
abline(h = mean(teens$age, na.rm = T), lty = 2) # Add verticle, horizontal line to a plot
# Consider only age between 13 and 20, treat all others as
# Missing values - NA
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
summary(teens$age)
# create dummy variables for female and unknown gender.
teens$female <- ifelse(teens$gender == "F" & !is.na(teens$gender), 1, 0)
teens$no_gender <- ifelse(is.na(teens$gender), 1, 0)
mean(teens$age, na.rm = TRUE)
aggregate(data = teens, age ~ gradyear, mean, na.rm = TRUE)
ave_age <- ave(teens$age,
teens$gradyear,
FUN = function(x) mean(x, na.rm = TRUE))
# Fill all the missing age fields with average age
teens$age <- ifelse(is.na(teens$age), ave_age, teens$age)
interests <- teens[5:40]  # Interests columns are from 5 to 40 in csv file
interests_z <- as.data.frame(lapply(interests, scale)) # Apply scale function to interests and return as data frame
set.seed(12)
teen_clusters <- kmeans(interests_z, 4)
clusplot(interests_z,
teen_clusters$cluster,
color=TRUE,
col.clus=c(1:4)[unique(teen_clusters$cluster)],
shade=TRUE,
labels=4,
lines=0,
main = "Bivariate Cluster Plot")
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=5)
model$size
clusplot(finalData,model$cluster)
print(finalData[1,])
print(finalData[1,] == 0)
(finalData[1,] == 0)
finalData[1,] == 0
finalData[1,] == 0
finalData[1,] != 0
for (i in c(1:613)){
finalData[finalData[i,] != 0]
}
for (i in c(1:613)){
fData <- finalData[finalData[i,] != 0]
}
dim(fData)
for (i in c(1:613)){
print(finalData[finalData[i,] != 0])
}
for (i in c(1:613)){
fData <- finalData[i,] != 0
}
dim(fData)
for (i in c(1:613)){
if(avg(finalData[i,] != 0)){
fData <- finalData[i,]
}
}
for (i in c(1:613)){
if(mean(finalData[i,] != 0)){
fData <- finalData[i,]
}
}
dim(fData)
print(fData)
for (i in c(1:613)){
if(mean(finalData[i,]) != 0){
fData <- finalData[i,]
}
}
for (i in c(1:613)){
print(finalData[i,])
}
size <- dim(newData)
print(size[1])
print(dim[2])
print(size[2])
data <- read.csv("census.csv")
dim(data)
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Literates.Population.Person,data$Non.Working.Population.Person)
newData <- newData[data$Town.Village_Code > 0,]
str(newData[c(2:8)])
size <- dim(newData)
newData <- newData[data$Town.Village_Code > 0,]
str(newData[c(2:size[2])])
print(nrow(newData))
w <- rep(1,14)
finalData <- newData[c(2:dim[2])]
finalData <- newData[c(2:size[2])]
str(finalData)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
data <- read.csv("census.csv")
data <- read.csv("census.csv")
dim(data)
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Literates.Population.Person,data$Non.Working.Population.Person)
size <- dim(newData)
newData <- newData[data$Town.Village_Code > 0,]
str(newData[c(2:size[2])])
print(nrow(newData))
w <- rep(1,14)
finalData <- newData[c(2:size[2])]
str(finalData)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=5)
model$size
clusplot(finalData,model$cluster)
library(ggplot2)
library(cluster)
data <- read.csv("census.csv")
dim(data)
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Scheduled.Castes.population.Person
,data$Scheduled.Tribes.population.Person,data$Literates.Population.Person,
data$Main.Household.Industries.Population.Person,data$Non.Working.Population.Person)
newData <- newData[data$Town.Village_Code > 0,]
str(newData[c(2:8)])
print(nrow(newData))
w <- rep(1,14)
size <- dim(newData)
print(size[2])
finalData <- newData[c(2:size[2])]
str(finalData)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=5)
model$size
clusplot(finalData,model$cluster)
model = kmeans(finalData,centers=4)
model$size
clusplot(finalData,model$cluster)
model$cluster
set.seed(12)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
model = kmeans(finalData,centers=4)
model$size
clusplot(finalData,model$cluster)
install.packages("tm")
library(tm)
install.packages("tm")
install.packages("xml2")
install.packages("tm")
library(tm)
library(ggplot2)
library(cluster)
data <- read.csv("census.csv")
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Scheduled.Castes.population.Person
,data$Scheduled.Tribes.population.Person,data$Literates.Population.Female,
data$Main.Household.Industries.Population.Person,data$Non.Working.Population.Person,
data$Marginal.Worker.Population.Person,data$Main.Working.Population.Female,
data$Main.Agricultural.Labourers.Population.Person)
dim(newData)
newData <- newData[data$Town.Village_Code > 0,]
str(newData[c(2:8)])
print(nrow(newData))
data$Scheduled.Castes.population.Person <- data$Scheduled.Castes.population.Person/data$Total.Population.Person
data$Scheduled.Tribes.population.Person <- data$Scheduled.Tribes.population.Person/data$Total.Population.Person
data$Literates.Population.Female <- data$Literates.Population.Female/data$Total.Population.Female
data$Marginal.Worker.Population.Person <- data$Marginal.Worker.Population.Person/data$Total.Population.Person
data$Non.Working.Population.Person <- data$Non.Working.Population.Person/data$Total.Population.Person
data$Main.Household.Industries.Population.Person <- data$Main.Household.Industries.Population.Person/data$Total.Population.Person
data$Main.Working.Population.Female <- data$Main.Working.Population.Female/data$Total.Population.Person
data$Main.Agricultural.Labourers.Population.Person <- data$Main.Agricultural.Labourers.Population.Person/data$Total.Population.Person
data <- read.csv("census.csv")
data <- read.csv("census.csv")
dim(data)
#Preparing data
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Scheduled.Castes.population.Person
,data$Scheduled.Tribes.population.Person,data$Literates.Population.Female,
data$Main.Household.Industries.Population.Person,data$Non.Working.Population.Person,
data$Marginal.Worker.Population.Person,data$Main.Working.Population.Female,
data$Main.Agricultural.Labourers.Population.Person)
newData <- newData[data$Town.Village_Code > 0,]
newData$Scheduled.Castes.population.Person <- newData$Scheduled.Castes.population.Person/newData$Total.Population.Person
newData$Scheduled.Tribes.population.Person <- newData$Scheduled.Tribes.population.Person/newData$Total.Population.Person
newData <- newData[data$Town.Village_Code > 0,]
newData$Scheduled.Castes.population.Person <- newData$Scheduled.Castes.population.Person/newData$Total.Population.Person
newData <- newData[data$Town.Village_Code > 0,]
dim(newData)
newData$Scheduled.Castes.population.Person <- newData$Scheduled.Castes.population.Person/newData$Total.Population.Person
newData$data.Scheduled.Castes.population.Person <- newData$data.Scheduled.Castes.population.Person/newData$data.Total.Population.Person
newData$data.Scheduled.Tribes.population.Person <- newData$data.Scheduled.Tribes.population.Person/newData$data.Total.Population.Person
newData$data.Literates.Population.Female <- newData$data.Literates.Population.Female/newData$data.Total.Population.Female
newData$data.Marginal.Worker.Population.Person <- newData$data.Marginal.Worker.Population.Person/newData$data.Total.Population.Person
newData$data.Literates.Population.Female <- newData$data.Literates.Population.Female/newData$data.Total.Population.Female
newData$data.Literates.Population.Female <- newData$data.Literates.Population.Female/newData$data.Total.Population.Female
newData$data.Literates.Population.Female <- newData$data.Literates.Population.Female/data$Total.Population.Female
data <- read.csv("census.csv")
dim(data)
#Preparing data
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Scheduled.Castes.population.Person
,data$Scheduled.Tribes.population.Person,data$Literates.Population.Female,
data$Main.Household.Industries.Population.Person,data$Non.Working.Population.Person,
data$Marginal.Worker.Population.Person,data$Main.Working.Population.Female,
data$Main.Agricultural.Labourers.Population.Person)
newData$data.Scheduled.Castes.population.Person <- newData$data.Scheduled.Castes.population.Person/newData$data.Total.Population.Person
newData$data.Scheduled.Tribes.population.Person <- newData$data.Scheduled.Tribes.population.Person/newData$data.Total.Population.Person
newData$data.Literates.Population.Female <- newData$data.Literates.Population.Female/data$Total.Population.Female
newData$data.Scheduled.Castes.population.Person <- newData$data.Scheduled.Castes.population.Person/newData$data.Total.Population.Person
newData$data.Scheduled.Tribes.population.Person <- newData$data.Scheduled.Tribes.population.Person/newData$data.Total.Population.Person
newData$data.Literates.Population.Female <- newData$data.Literates.Population.Female/data$Total.Population.Female
newData$data.Marginal.Worker.Population.Person <- newData$data.Marginal.Worker.Population.Person/newData$data.Total.Population.Person
newData$data.Non.Working.Population.Person <- newData$data.Non.Working.Population.Person/newData$data.Total.Population.Person
newData$data.Main.Household.Industries.Population.Person <- newData$data.Main.Household.Industries.Population.Person/newData$data.Total.Population.Person
newData$data.Main.Working.Population.Female <- newData$data.Main.Working.Population.Female/data$Total.Population.Female
newData$data.Main.Agricultural.Labourers.Population.Person <- newData$data.Main.Agricultural.Labourers.Population.Person/newData$data.Total.Population.Person
newData <- newData[data$Town.Village_Code > 0,]
dim(newData)
str(newData)
summary(newData)
#dim(newData)
newData
summary(newData)
#Removing NA's
newData$data.Scheduled.Castes.population.Person <- ifelse(is.na(newData$data.Scheduled.Castes.population.Person),mean(newData$data.Scheduled.Castes.population.Person,
na.rm = T),newData$data.Scheduled.Castes.population.Person)
summary(newData)
newData$data.Main.Agricultural.Labourers.Population.Person <- ifelse(is.na(newData$data.Main.Agricultural.Labourers.Population.Person),mean(newData$data.Main.Agricultural.Labourers.Population.Person,
na.rm = T),newData$data.Main.Agricultural.Labourers.Population.Person)
newData$data.Main.Working.Population.Female <- ifelse(is.na(newData$data.Main.Working.Population.Female),mean(newData$data.Main.Working.Population.Female,
na.rm = T),newData$data.Main.Working.Population.Female)
newData$data.Marginal.Worker.Population.Person <- ifelse(is.na(newData$data.Marginal.Worker.Population.Person),mean(newData$data.Marginal.Worker.Population.Person,
na.rm = T),newData$data.Marginal.Worker.Population.Person)
newData$data.Non.Working.Population.Person <- ifelse(is.na(newData$data.Non.Working.Population.Person),mean(newData$data.Non.Working.Population.Person,
na.rm = T),newData$data.Non.Working.Population.Person)
newData$data.Main.Household.Industries.Population.Person <- ifelse(is.na(newData$data.Main.Household.Industries.Population.Person),mean(newData$data.Main.Household.Industries.Population.Person,
na.rm = T),newData$data.Main.Household.Industries.Population.Person)
newData$data.Literates.Population.Female <- ifelse(is.na(newData$data.Literates.Population.Female),mean(newData$data.Literates.Population.Female,
na.rm = T),newData$data.Literates.Population.Female)
newData <- newData[data$Town.Village_Code > 0,]
dim(newData)
str(newData)
summary(newData)
data <- read.csv("census.csv")
dim(data)
#Preparing data
newData <- data.frame(data$Town.Village_Code,data$No.of.Households,data$Total.Population.Person,data$Scheduled.Castes.population.Person
,data$Scheduled.Tribes.population.Person,data$Literates.Population.Female,
data$Main.Household.Industries.Population.Person,data$Non.Working.Population.Person,
data$Marginal.Worker.Population.Person,data$Main.Working.Population.Female,
data$Main.Agricultural.Labourers.Population.Person)
newData$data.Scheduled.Castes.population.Person <- newData$data.Scheduled.Castes.population.Person/newData$data.Total.Population.Person
newData$data.Scheduled.Tribes.population.Person <- newData$data.Scheduled.Tribes.population.Person/newData$data.Total.Population.Person
newData$data.Literates.Population.Female <- newData$data.Literates.Population.Female/data$Total.Population.Female
newData$data.Marginal.Worker.Population.Person <- newData$data.Marginal.Worker.Population.Person/newData$data.Total.Population.Person
newData$data.Non.Working.Population.Person <- newData$data.Non.Working.Population.Person/newData$data.Total.Population.Person
newData$data.Main.Household.Industries.Population.Person <- newData$data.Main.Household.Industries.Population.Person/newData$data.Total.Population.Person
newData$data.Main.Working.Population.Female <- newData$data.Main.Working.Population.Female/data$Total.Population.Female
newData$data.Main.Agricultural.Labourers.Population.Person <- newData$data.Main.Agricultural.Labourers.Population.Person/newData$data.Total.Population.Person
summary(newData)
#Removing NA's
newData$data.Scheduled.Castes.population.Person <- ifelse(is.na(newData$data.Scheduled.Castes.population.Person),mean(newData$data.Scheduled.Castes.population.Person,
na.rm = T),newData$data.Scheduled.Castes.population.Person)
newData$data.Main.Agricultural.Labourers.Population.Person <- ifelse(is.na(newData$data.Main.Agricultural.Labourers.Population.Person),mean(newData$data.Main.Agricultural.Labourers.Population.Person,
na.rm = T),newData$data.Main.Agricultural.Labourers.Population.Person)
newData$data.Main.Working.Population.Female <- ifelse(is.na(newData$data.Main.Working.Population.Female),mean(newData$data.Main.Working.Population.Female,
na.rm = T),newData$data.Main.Working.Population.Female)
newData$data.Marginal.Worker.Population.Person <- ifelse(is.na(newData$data.Marginal.Worker.Population.Person),mean(newData$data.Marginal.Worker.Population.Person,
na.rm = T),newData$data.Marginal.Worker.Population.Person)
newData$data.Non.Working.Population.Person <- ifelse(is.na(newData$data.Non.Working.Population.Person),mean(newData$data.Non.Working.Population.Person,
na.rm = T),newData$data.Non.Working.Population.Person)
newData$data.Main.Household.Industries.Population.Person <- ifelse(is.na(newData$data.Main.Household.Industries.Population.Person),mean(newData$data.Main.Household.Industries.Population.Person,
na.rm = T),newData$data.Main.Household.Industries.Population.Person)
newData$data.Literates.Population.Female <- ifelse(is.na(newData$data.Literates.Population.Female),mean(newData$data.Literates.Population.Female,
na.rm = T),newData$data.Literates.Population.Female)
newData$data.Scheduled.Tribes.population.Person <- ifelse(is.na(newData$data.Scheduled.Tribes.population.Person),mean(newData$data.Scheduled.Tribes.population.Person,
na.rm = T),newData$data.Scheduled.Tribes.population.Person)
summary(newData)
newData <- newData[data$Town.Village_Code > 0,]
summary(newData)
newData$data.No.of.Households <- scale(newData$data.No.of.Households)
newData$data.Total.Population.Person <- scale(newData$data.Total.Population.Person)
summary(newData)
w <- rep(1,14)
size <- dim(newData)
print(size[2])
finalData <- newData[c(2:size[2])]
str(finalData)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
finalModel = kmeans(finalData,centers=4)
finalModel = kmeans(finalData,centers=4)
finalModel$size
clusplot(finalData,finalModel$cluster)
finalModel$cluster
fianlData$cluseter <-  finalModel$cluster
size <- dim(newData)
w <- rep(1,14)
size <- dim(newData)
print(size[2])
finalData <- newData[c(2:size[2])]
str(finalData)
set.seed(12)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
finalModel = kmeans(finalData,centers=4)
finalModel$size
clusplot(finalData,finalModel$cluster)
fianlData$cluseter <-  finalModel$cluster
finalData$cluseter <-  finalModel$cluster
finalData
write.csv(finalData,file = "Resul.csv",sep = ",",col.names = T)
w <- rep(1,14)
size <- dim(newData)
print(size[2])
finalData <- newData[c(2:size[2])]
str(finalData)
set.seed(12)
for (i in 1:15){
w[i] <- sum(kmeans(finalData,centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
outputData$TownId <- newData$data.Town.Village_Code
outputData$TownId <- data.frame(newData$data.Town.Village_Code)
outputData <- data.frame(newData$data.Town.Village_Code)
outputData
outputData <- data.frame(newData$data.Town.Village_Code,row.names = "TownId")
outputData <- data.frame(newData$data.Town.Village_Code,row.names = 1)
outputData <- data.frame(newData$data.Town.Village_Code)
str(outputData)
outputData$Cluster <- data.frame(finalModel$cluster)
outputData
for (i in 1:15){
w[i] <- sum(kmeans(newData[c(2:size[2])],centers=i)$withinss)
}
print(w)
plot(1:15,w,type = "b")
finalModel = kmeans(newData[c(2:size[2])],centers=4)
finalModel$size
clusplot(newData[c(2:size[2])],finalModel$cluster)
newData$cluster <-  finalModel$cluster
str(newData)
write.csv(newData,file = "Resul.csv",sep = ",",col.names = T)
outputData$Cluster <- finalModel$cluster
write.csv(outputData,file = "Resul.csv",sep = ",",col.names = T)
outputData <- data.frame(newData$data.Town.Village_Code)
outputData$Cluster <- finalModel$cluster
write.csv(outputData,file = "Resul.csv",sep = ",",col.names = T)
write.csv(outputData,file = "Resul.csv")
#Selecting K value as 2
finalModel2 <- kmeans(newData[c(2:size[2])],centers=2)
finalModel2$size
clusplot(newData[c(2:size[2])],finalModel2$cluster)
newData$cluster <-  finalModel2$cluster
str(newData)
outputData <- data.frame(newData$data.Town.Village_Code)
outputData$Cluster <- finalModel2$cluster
write.csv(outputData,file = "ResulE.csv")
